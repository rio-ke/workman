---
- name: To show current kernel version
  shell: uname -r | sed 's/.x86_64//g'
  # shell: uname -r
  register: kernel_version

- name: Next version of kernel
  shell: yum list available kernel -q | grep kernel | awk '{print $2}'
  # shell: rpm -q kernel rpm -q kernel|tail -n 1 | sed 's/kernel-//g'
  register: update_kernel_version

- debug:
    msg: "Kernel version are upto date. Current version is - {{kernel_version.stdout}}"
  when: update_kernel_version.stdout == kernel_version.stdout or update_kernel_version.stdout == ""

- debug:
    msg: "Kernel Versions are available. Please Update!!!!!!!"
  when: update_kernel_version.stdout != kernel_version.stdout and update_kernel_version.stdout != ""

- name: Update the kernel
  yum:
    name: kernel
    state: latest
  when: update_kernel_version.stdout != kernel_version.stdout and update_kernel_version.stdout != ""

- name: Restart server
  shell: sleep 1 && shutdown -r now "Reboot triggered by Ansible" && sleep 1
  async: 1
  poll: 0
  ignore_errors: true
  register: restart_state
  when: update_kernel_version.stdout != kernel_version.stdout and update_kernel_version.stdout != ""

- name: "This play will wait for 3 minutes for system to come up"
  pause: minutes=3
  register: result_pause_state
  when: update_kernel_version.stdout != kernel_version.stdout and update_kernel_version.stdout != ""

- name: check the client uptime
  shell: uptime
  register: up_time

- debug:
    msg: "server Uptime is {{up_time.stdout}}"
