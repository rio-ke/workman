#!/bin/sh
#
# <daemonname> <summary>
#
# chkconfig:   345 99 01
# description: Manage service prometheus node exporter


### BEGIN INIT INFO
# Provides: prometheu-node-exporter
# Required-Start: 
# Required-Stop: 
# Should-Start: 
# Should-Stop: 
# Default-Start: 
# Default-Stop: 
# Short-Description: 
# Description: Manage service prometheus node exporter
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

exec="/usr/local/bin/node_exporter"
prog="node_exporter"
# node_exporter is not able to manage configuration file
#config="<path to major config file>"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

start() {
    [ -x $exec ] || exit 5
    #[ -f $config ] || exit 6
    echo -n $"Starting $prog: "
    # if not running, start it up here, usually something like "daemon $exec"
    daemon /usr/local/bin/node_exporter -collectors.enabled=diskstats,filefd,filesystem,loadavg,meminfo,netdev,netstat,stat,time,uname,vmstat,meminfo_numa -web.listen-address=192.168.5.207:42000


    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    # stop it here, often "killproc $prog"
    killproc /usr/local/bin/node_exporter
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac

---------------------------------------------------------------------------------------------------------

#!/bin/bash
#
# /etc/rc.d/init.d/node_exporter
#
# Prometheus monitoring server
#
#  chkconfig: 2345 20 80 Read
#  description: node_exporter monitoring server
#  processname: node_exporter

# Source function library.
. /etc/rc.d/init.d/functions

PROGNAME=node_exporter # --collector.textfile.directory="/opt/node_exporter-0.15.2.linux-amd64/textfile_collector/"
PROG=/opt/node_exporter-0.15.2.linux-amd64/$PROGNAME 
USER=root
LOGFILE=/var/log/node_exporter.log
DATADIR=/opt/node_exporter-0.15.2.linux-amd64/node_exporter
LOCKFILE=/var/run/$PROGNAME.pid
#CONFIG_FILE=/usr/hostonnet/prometheus/prometheus.yml
#ALERT_MGR_URL=localhost:9093

start() {
    echo -n "Starting $PROGNAME: "
    cd /opt/node_exporter-0.15.2.linux-amd64
    daemon --user $USER --pidfile="$LOCKFILE" "$PROG --collector.runit --collector.tcpstat  --collector.logind --collector.textfile.directory="/opt/node_exporter-0.15.2.linux-amd64/textfile_collector/"  &>$LOGFILE &"
    echo $(pidofproc $PROGNAME) >$LOCKFILE
    echo
}

stop() {
    echo -n "Shutting down $PROGNAME: "
    killproc $PROGNAME
    rm -f $LOCKFILE
    echo
}


case "$1" in
    start)
    start
    ;;
    stop)
    stop
    ;;
    status)
    status $PROGNAME
    ;;
    restart)
    stop
    start
    ;;
    reload)
    echo "Sending SIGHUP to $PROGNAME"
    kill -SIGHUP $(pidofproc $PROGNAME)
    ;;
    *)
        echo "Usage: service node_exporter {start|stop|status|reload|restart}"
        exit 1
    ;;
esac


