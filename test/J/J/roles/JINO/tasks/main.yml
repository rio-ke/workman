---
- name: "Patch Enterprise Linux"
  block:
    #For testing whether or not we need a reboot or service restart we need yum-utils installed to utilize the needs-restarting utility
    - name: "Ensure yum-utils is installed"
      yum:
        name: "yum-utils"
        state: "latest"

    - name: "Update packages"
      yum:
        name: "{{ patch_pkgs | default('*') }}"
        state: "latest"
        update_cache: "yes"
      register: "yum_output"

    - name: "Check if services need restarting"
      command: 'needs-restarting -s'
      changed_when: "needs_service_restart.stdout_lines | length > 0"
      register: "needs_service_restart"
      notify:
        - "Restart required services"

    - name: "Check if reboot is required"
      command:  'needs-restarting -r'
      changed_when: "needs_reboot.rc == 1"
      failed_when: "needs_reboot.rc > 1"
      register: "needs_reboot"

    - name: "Output collected yum update output"
      debug:
         var: "yum_output.results"
      when: "patch_display_patch_output"
  when:
    - 'ansible_os_family == "RedHat"'
    - 'ansible_distribution_major_version == "7"'

- name: "Handle reboot | Enterprise Linux"
  block:
    - name: "Reboot host"
      shell: "sleep 1 && shutdown -r now {{ patch_reboot_message | default('Rebooting due to patching.') }} && sleep 1"
      async: "1"
      poll: "0"
      ignore_errors: True

    - name: "Ensure host comes back online"
      local_action:
        module: "wait_for"
        host: "{{ inventory_hostname }}"
        port: "22"
        delay: "30"
        sleep: "15"
        timeout: "600"
        msg: "Can't connect to {{ inventory_hostname }} after 10 minutes"
  when:
    - 'ansible_os_family == "RedHat"'
    - 'ansible_distribution_major_version == "7"'
    - 'needs_reboot.rc == 1'
    - 'not patch_never_reboot'
