---
- name: Add Elasticsearch GPG key.
  rpm_key:
    key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
- name: Add Logstash repository.
  template:
    src: logstash.repo.j2
    dest: /etc/yum.repos.d/logstash.repo
    mode: 0644
- name: Install Logstash.
  package:
    name: logstash
    state: present
- name: Create Logstash configuration files.
  template:
    src: "{{ item }}.j2"
    dest: "/etc/logstash/conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - 01-beats-input.conf
    - 30-elasticsearch-output.conf
  notify: restart logstash

- name: Create Logstash filters.
  copy:
    src: "{{ item }}"
    dest: "/etc/logstash/conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - 10-syslog.conf
    - 11-nginx.conf
    - 12-apache.conf
    - 14-solr.conf
    - 15-drupal.conf
  notify: restart logstash

- name: Create Logstash configuration file for local syslog.
  template:
    src: 02-local-syslog-input.conf.j2
    dest: /etc/logstash/conf.d/02-local-syslog-input.conf
    owner: root
    group: root
    mode: 0644
  when: logstash_monitor_local_syslog
  notify: restart logstash

- name: Ensure configuration for local syslog is absent if disabled.
  file:
    path: /etc/logstash/conf.d/02-local-syslog-input.conf
    state: absent
  when: not logstash_monitor_local_syslog
  notify: restart logstash
- name: Ensure Logstash SSL key pair directory exists.
  file:
    path: "{{ logstash_ssl_dir }}"
    state: directory
  when: logstash_ssl_key_file

- name: Copy SSL key and cert for logstash-forwarder.
  copy:
    src: "{{ item }}"
    dest: "{{ logstash_ssl_dir }}/{{ item | basename }}"
    mode: 0644
  with_items:
    - "{{ logstash_ssl_key_file }}"
    - "{{ logstash_ssl_certificate_file }}"
  notify: restart logstash
  when: logstash_ssl_key_file
- name: Get list of installed plugins.
  command: >
    ./bin/logstash-plugin list
    chdir={{ logstash_dir }}
  register: logstash_plugins_list
  changed_when: false

- name: Install configured plugins.
  command: >
    ./bin/logstash-plugin install {{ item }}
    chdir={{ logstash_dir }}
  with_items: "{{ logstash_install_plugins }}"
  when: "item not in logstash_plugins_list.stdout"
  notify: restart logstash
- name: Ensure Logstash is started and enabled on boot.
  service:
    name: logstash
    state: started
    enabled: "{{ logstash_enabled_on_boot }}"
