---
- name: install services
  hosts: vag
  vars:
    - services:
      - rsyslog
      - audit
    - servicesd:
      - rsyslog
      - auditd
    - syslog_server: localhost
  tasks:
  - name: install packages
    yum:
      name: "{{item}}"
      state: present
    with_items:
      - "{{services}}"
  - name: replace in rsyslog and audit file if already existing replaced
    replace:
      path: "{{item.path}}"
      regexp: "{{item.exp}}"
      replace: "{{item.rep}}"
      backup: yes
    with_items:
      - { path: '/etc/rsyslog.conf', exp: '#\$ModLoad imtcp', rep: '$ModLoad imtcp' }
      - { path: '/etc/rsyslog.conf', exp: '#\$InputTCPServerRun 514', rep: '$InputTCPServerRun 514' }
      - { path: '/etc/rsyslog.conf', exp: '#\*.* \@@localhost:514', rep: '*.* @@{{ syslog_server }}:514' }
      - { path: '/etc/audit/auditd.conf', exp: 'max_log_file_action = ROTATE', rep: 'max_log_file_action = keep_logs' }
      - { path: '/etc/audit/auditd.conf', exp: 'admin_space_left_action = SUSPEND', rep: 'admin_space_left_action = halt' }
      - { path: '/etc/audit/auditd.conf', exp: 'action_mail_acct = root', rep: 'action_mail_acct = root' }
      - { path: '/etc/audit/auditd.conf', exp: 'space_left_action = SYSLOG', rep: 'space_left_action = email' }

  - name:
    raw:  grep "audit" /boot/grub2/grub.cfg
    ignore_errors: true
    register: grub_audit
  - name: add include audit in GRUB
    replace:
      path: /etc/default/grub
      regexp: GRUB_CMDLINE_LINUX="no_timer_check console=tty0 console=ttyS0,115200n8 net.ifnames=0 biosdevname=0 elevator=noop crashkernel=auto"
      replace: GRUB_CMDLINE_LINUX="no_timer_check console=tty0 console=ttyS0,115200n8 net.ifnames=0 biosdevname=0 elevator=noop crashkernel=auto,audit=1"
      backup: yes
    register: include_audit
    when: grub_audit is failed
  - name: update the GRUB
    raw: grub2-mkconfig -o /boot/grub2/grub.cfg
    when: grub_audit is failed

  - name: time-found
    raw: grep time-change /etc/audit/audit.rules
    register: time_change
    ignore_errors: true

  - name: Record Events That Modify Date and Time Information
    copy:
      dest: /etc/audit/audit.rules
      content: |
        # Record Events That Modify Date and Time Information
        -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
        -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
        -a always,exit -F arch=b64 -S clock_settime -k time-change
        -a always,exit -F arch=b32 -S clock_settime -k time-change
        -w /etc/localtime -p wa -k time-change
        # Record Events That Modify User/Group Information
        -w /etc/group -p wa -k identity
        -w /etc/passwd -p wa -k identity
        -w /etc/gshadow -p wa -k identity
        -w /etc/shadow -p wa -k identity
        -w /etc/security/opasswd -p wa -k identity
        # Record Events That Modify the System's Network Environment
        -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
        -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
        -w /etc/issue -p wa -k system-locale
        -w /etc/sysconfig/network -p wa -k system-locale

        #Record Events That Modify the System's Mandatory Access
        -w /etc/selinux/ -p wa -k MAC-policy
        # Collect Login and Logout Events
        -w /var/log/faillog -p wa -k logins
        -w /var/log/lastlog -p wa -k logins
        -w /var/log/tallylog -p wa -k logins
        # Collect Session Initiation Information
        -w /var/run/utmp -p wa -k session
        -w /var/log/wtmp -p wa -k session
        -w /var/log/btmp -p wa -k session
        # Collect Discretionary Access Control Permission Modification Events
        -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
        # Collect Unsuccessful Unauthorized Access Attempts to Files
        -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
        -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
        -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
        -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access

        # Collect Use of Privileged Commands
        find PART -xdev \( -perm -4000 -o -perm -2000 \) -type f | awk '{print "-a always,exit -F path=" $1 " -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged" }'

        # Collect Successful File System Mounts
        -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
        -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
        #  Collect File Deletion Events by User
        -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
        -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
        # Collect Changes to System Administration Scope
        -w /etc/sudoers -p wa -k scope
        # Collect System Administrator Actions
        -w /var/log/sudo.log -p wa -k actions
        # Collect Kernel Module Loading and Unloading
        -w /sbin/insmod -p x -k modules
        -w /sbin/rmmod -p x -k modules
        -w /sbin/modprobe -p x -k modules
        -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
        -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
        # Make the Audit Configuration Immutable
        -e 2

      backup: yes
    when: ansible_architecture == "x86_64" and time_change is failed

  - name: Record Events That Modify Date and Time Information
    copy:
      dest: /etc/audit/audit.rules
      content: |
        # Record Events That Modify Date and Time Information
        -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
        -a always,exit -F arch=b32 -S clock_settime -k time-change
        -w /etc/localtime -p wa -k time-change
        # Record Events That Modify User/Group Information
        -w /etc/group -p wa -k identity
        -w /etc/passwd -p wa -k identity
        -w /etc/gshadow -p wa -k identity
        -w /etc/shadow -p wa -k identity
        -w /etc/security/opasswd -p wa -k identity
        # Record Events That Modify the System's Network Environment
        -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
        -w /etc/issue -p wa -k system-locale
        -w /etc/sysconfig/network -p wa -k system-locale

        #Record Events That Modify the System's Mandatory Access
        -w /etc/selinux/ -p wa -k MAC-policy
        # Collect Login and Logout Events
        -w /var/log/faillog -p wa -k logins
        -w /var/log/lastlog -p wa -k logins
        -w /var/log/tallylog -p wa -k logins
        # Collect Session Initiation Information
        -w /var/run/utmp -p wa -k session
        -w /var/log/wtmp -p wa -k session
        -w /var/log/btmp -p wa -k session
        # Collect Discretionary Access Control Permission Modification Events
        -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
        -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
        # Collect Unsuccessful Unauthorized Access Attempts to Files
        -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
        -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access

        # Collect Use of Privileged Commands
        find PART -xdev \( -perm -4000 -o -perm -2000 \) -type f | awk '{print "-a always,exit -F path=" $1 " -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged" }'

        # Collect Successful File System Mounts
        -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
        # Collect File Deletion Events by User
        -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
        # Collect Changes to System Administration Scope
        -w /etc/sudoers -p wa -k scope
        # Collect System Administrator Actions
        -w /var/log/sudo.log -p wa -k actions
        # Collect Kernel Module Loading and Unloading
        -w /sbin/insmod -p x -k modules
        -w /sbin/rmmod -p x -k modules
        -w /sbin/modprobe -p x -k modules
        -a always,exit -F arch=b32 -S init_module -S delete_module -k modules
        # Make the Audit Configuration Immutable
        -e 2
      backup: yes
    when: ansible_architecture == "32" and time_change is failed
  - name: syslog logrotate
    lineinfile:
      path: /etc/logrotate.d/syslog
      firstmatch: yes
      insertafter: \/var\/log\/spooler
      line: /var/log/boot.log
  - name: enable and start the service
    service:
      name: "{{item.name}}"
      state: "{{item.state}}"
      enabled: yes
    with_items:
      - { name: 'rsyslog', state: 'restarted'}
      - { name: 'auditd', state: 'started'}  # audit service restart state not available
    register: service_result
  - debug:
      msg: "{{ service_result.results | json_query('[].item[].name[]') }}  = {{ service_result.results | json_query('[].status[].ActiveState[]') }}"

